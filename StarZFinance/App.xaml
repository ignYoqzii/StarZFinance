<Application x:Class="StarZFinance.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:StarZFinance"
             StartupUri="/Windows/MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Themes/ColorsManager.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="DefaultFont">/StarZFinance;component/Resources/Outfit.ttf#Outfit</FontFamily>

            <Style x:Key="IconsStyle" TargetType="Rectangle">
                <Setter Property="Opacity" Value="0.8"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Fill" Value="{DynamicResource IconColor}"/>
                <Setter Property="RenderOptions.BitmapScalingMode" Value="HighQuality"/>
                <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>

                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform x:Name="ImageTransform"/>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
                                     To="1.05" 
                                     Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
                                     To="1.05" 
                                     Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                     To="1" 
                                     Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)" 
                                     To="1" 
                                     Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)" 
                                     To="1" 
                                     Duration="0:0:0.2"/>
                                <DoubleAnimation Storyboard.TargetProperty="Opacity" 
                                     To="0.8" 
                                     Duration="0:0:0.2"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </EventTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="{x:Type local:NavigationButton}">
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:NavigationButton}">
                            <Rectangle x:Name="Icon" Height="30" Width="30" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" Fill="{DynamicResource SideBarIconColor}">
                                <Rectangle.OpacityMask>
                                    <ImageBrush ImageSource="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}" Stretch="Uniform" RenderOptions.BitmapScalingMode="HighQuality" />
                                </Rectangle.OpacityMask>
                            </Rectangle>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource ResourceKey=AccentColor}"/>
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Fill" TargetName="Icon" Value="{DynamicResource ResourceKey=AccentColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultButtons" TargetType="Button">
                <Setter Property="Foreground" Value="AliceBlue"/>
                <Setter Property="FontFamily" Value="{StaticResource DefaultFont}"/>
                <Setter Property="FontWeight" Value="Bold"/>
                <Setter Property="Background" Value="{DynamicResource AccentColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Name="RootElement" RenderTransformOrigin="0.5,0.5" Cursor="Hand" CornerRadius="10" Background="{TemplateBinding Background}">
                                <ContentPresenter Margin="0,0,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                     To="1" Duration="0:0:0.3"/>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                     To="1" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                     To="1.02" Duration="0:0:0.3"/>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                     To="1.05" Duration="0:0:0.3"/>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="Opacity" 
                                                     To="0.7" Duration="0:0:0.3"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleX" 
                                                     To="0.98" Duration="0:0:0.05"/>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="RenderTransform.ScaleY" 
                                                     To="0.98" Duration="0:0:0.05"/>
                                                <DoubleAnimation Storyboard.TargetName="RootElement" 
                                                     Storyboard.TargetProperty="Opacity" 
                                                     To="0.5" Duration="0:0:0.05"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border.RenderTransform>
                                    <ScaleTransform x:Name="RenderTransform"/>
                                </Border.RenderTransform>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ThemeCheckBoxStyle" TargetType="CheckBox">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Width" Value="50" />
                <Setter Property="Height" Value="50" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <Border x:Name="CheckBoxBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="10">
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="CheckBoxBorder" Property="BorderThickness" Value="2"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultCheckBoxes" TargetType="CheckBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="CheckBox">
                            <StackPanel Orientation="Horizontal">
                                <Grid >
                                    <Border x:Name="border" Width="40" Height="20" Cursor="Hand" CornerRadius="10" Margin="5,0"/>
                                    <Border x:Name="button" Background="#FFF" Margin="9,0,0,0" Height="16" Width="16" CornerRadius="13.5" Cursor="Hand" HorizontalAlignment="Left"  />
                                </Grid>
                            </StackPanel>
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="right">
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.3" From="9,0,0,0" To="25,0,0,0" >
                                        <ThicknessAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                                <Storyboard x:Key="left">
                                    <ThicknessAnimation Storyboard.TargetProperty="Margin" Storyboard.TargetName="button" Duration="0:0:0.3" From="25,0,0,0" To="9,0,0,0" >
                                        <ThicknessAnimation.EasingFunction>
                                            <CircleEase EasingMode="EaseOut"/>
                                        </ThicknessAnimation.EasingFunction>
                                    </ThicknessAnimation>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="false">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryBackgroundColor}"/>
                                    <Setter TargetName="button" Property="Margin" Value="9,0,0,0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource AccentColor}"/>
                                    <Setter TargetName="button" Property="Margin" Value="25,0,0,0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultTextBoxes" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{DynamicResource PrimaryBackgroundColor}" CornerRadius="7.5" x:Name="Border">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,0,5,0" Background="Transparent"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
                <Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
                <Setter Property="FontSize" Value="12" />
                <Setter Property="FontWeight" Value="Medium" />
                <Setter Property="VerticalAlignment" Value="Bottom" />
                <Setter Property="CaretBrush" Value="{DynamicResource TextColor}" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>
            
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="20" />
                    </Grid.ColumnDefinitions>
                    <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="5" Background="{DynamicResource PrimaryBackgroundColor}"
                    BorderBrush="{DynamicResource SideBarBackgroundColor}" BorderThickness="1" />
                    <Border Grid.Column="0" CornerRadius="5" Margin="1" Background="{DynamicResource PrimaryBackgroundColor}" 
                    BorderBrush="{DynamicResource SideBarBackgroundColor}" BorderThickness="0,0,1,0" />
                    <Path x:Name="Arrow" Grid.Column="1" Fill="{DynamicResource IconColor}" HorizontalAlignment="Center" 
                  VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
                </Grid>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
                <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" CornerRadius="5" />
            </ControlTemplate>

            <Style x:Key="DefaultComboBoxItem" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border Name="Border" Padding="2" SnapsToDevicePixels="true" CornerRadius="5">
                                <ContentPresenter />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Border" Property="Opacity" Value="0.8"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="DefaultComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="MinWidth" Value="120"/>
                <Setter Property="MinHeight" Value="20"/>
                <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
                <Setter Property="FontFamily" Value="{DynamicResource DefaultFont}"/>
                <Setter Property="FontWeight" Value="Medium"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid>
                                <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" 
                                      Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press"/>
                                <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" 
                                 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3"
                                 Focusable="True" Background="{DynamicResource PrimaryBackgroundColor}" FontFamily="{DynamicResource DefaultFont}" FontWeight="Medium" Foreground="{DynamicResource TextColor}" Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" 
                               AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                    <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder" Background="{DynamicResource PrimaryBackgroundColor}" BorderThickness="1" BorderBrush="{DynamicResource SideBarBackgroundColor}" CornerRadius="5"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- ScrollBar Style for all ScrollViewers of the application -->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid x:Name="Grid">
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                                           Height="Auto" Fill="Transparent"/>
                                <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" Width="10" Height="Auto" 
                                        Background="{TemplateBinding Background}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal">
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto"/>
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentColor}"/>
                <Setter Property="Background" Value="{DynamicResource IconColor}"/>
                <Setter Property="Width" Value="10"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid x:Name="GridRoot" Width="12" Background="{x:Null}">
                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="False">
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" 
                                               Style="{DynamicResource ScrollThumbs}"/>
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False"/>
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                    <Setter Value="0.8" TargetName="Thumb" Property="Opacity"/>
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                    <Setter Value="0.5" TargetName="Thumb" Property="Opacity"/>
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter TargetName="GridRoot" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="Height" Value="12"/>
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal"/>
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand"/>
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>